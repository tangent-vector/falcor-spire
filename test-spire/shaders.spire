module ModelViewerParams
{
	param int dummy;
}

template shader ModelViewerShader(
	params : ModelViewerParams,
	L : ILighting,
	InternalPerFrameCB : InternalPerFrameCB_T,
	InternalPerMeshCB : InternalPerMeshCB_T,
	M : Material,
	VertexAttribs : IVertexAttribs,  // hack: put components that does not generate a uniform buffer last to avoid incomplete pso
	) targets StandardPipeline
{
	using params;
	using InternalPerFrameCB;

	using VertexAttribs;

	using InternalPerMeshCB;

	using DefaultVertexShader;
	using material = M();
	using lighting = L(material.evalMaterial);

    public out @Fragment vec4 sv_target
	{
		ShadingAttribs shAttr;
		material.prepareShadingAttribs(posW, /*gCam.*/position, normalW, bitangent, vertUV, 0.0f, shAttr);
		return lighting.lit(shAttr);
	}
}